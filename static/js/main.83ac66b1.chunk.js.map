{"version":3,"sources":["logo.svg","src/Scores.js","src/Dashboard.js","App.js","reportWebVitals.js","index.js"],"names":["preventDefault","event","useStyles","makeStyles","theme","seeMore","marginTop","spacing","Orders","classes","useState","data","setData","fetch","then","response","json","items","Fragment","Table","size","TableHead","TableRow","TableCell","align","TableBody","map","row","name","time","toFixed","correct","style","color","className","Link","href","onClick","Copyright","Typography","variant","Date","getFullYear","TabPanel","props","children","value","index","other","role","hidden","id","aria-labelledby","Box","p","root","display","toolbar","paddingRight","toolbarIcon","alignItems","justifyContent","padding","mixins","appBar","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","width","enteringScreen","menuButton","marginRight","menuButtonHidden","title","flexGrow","drawerPaper","position","whiteSpace","drawerPaperClose","overflowX","breakpoints","up","appBarSpacer","content","height","overflow","container","paddingTop","paddingBottom","paper","flexDirection","fixedHeight","tab","Dashboard","React","open","setOpen","clsx","setValue","CssBaseline","AppBar","Toolbar","IconButton","edge","aria-label","component","noWrap","Badge","badgeContent","Drawer","Divider","Container","maxWidth","Paper","Tabs","onChange","newValue","indicatorColor","textColor","centered","Tab","label","pt","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.83ac66b1.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, { useState } from 'react';\r\nimport Link from '@material-ui/core/Link';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Title from './Title';\r\nimport DoneIcon from '@material-ui/icons/Done';\r\nimport ClearIcon from '@material-ui/icons/Clear';\r\n\r\nfunction preventDefault(event) {\r\n  event.preventDefault();\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  seeMore: {\r\n    marginTop: theme.spacing(3),\r\n  },\r\n}));\r\n\r\nexport default function Orders() {\r\n  const classes = useStyles();\r\n  const [data,setData]=useState([]);\r\n  fetch('http://eaogudskckezrfywev.pythonanywhere.com/leader')\r\n  .then(response => response.json())\r\n  .then(data => setData(data.items));\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {/* <Title>Most recent question</Title> */}\r\n      <Table size=\"small\">\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell>Name</TableCell>\r\n            <TableCell>Time Taken</TableCell>\r\n            <TableCell align=\"right\">Answer</TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {data.map((row) => (\r\n            <TableRow key={row.name}>\r\n              <TableCell>{row.name}</TableCell>\r\n              <TableCell>{(row.time).toFixed(2)}</TableCell>\r\n              <TableCell align=\"right\">{row.correct?<DoneIcon style={{color:\"green\"}}/>:<ClearIcon style={{color:\"red\"}}/>}</TableCell>\r\n            </TableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n      <div className={classes.seeMore}>\r\n        <Link color=\"primary\" href=\"#\" onClick={preventDefault}>\r\n          See more\r\n        </Link>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n}","import React, { useState } from \"react\";\r\nimport clsx from \"clsx\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport List from \"@material-ui/core/List\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Badge from \"@material-ui/core/Badge\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\r\nimport NotificationsIcon from \"@material-ui/icons/Notifications\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport Scores from \"./Scores\";\r\nimport Tabs from \"@material-ui/core/Tabs\";\r\nimport Tab from \"@material-ui/core/Tab\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {\"Copyright Â© \"}\r\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\r\n        IVC\r\n      </Link>{\" \"}\r\n      {new Date().getFullYear()}\r\n      {\".\"}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nfunction TabPanel(props) {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`simple-tabpanel-${index}`}\r\n      aria-labelledby={`simple-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && (\r\n        <Box p={3}>\r\n          <Typography>{children}</Typography>\r\n        </Box>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n  children: PropTypes.node,\r\n  index: PropTypes.any.isRequired,\r\n  value: PropTypes.any.isRequired,\r\n};\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n  },\r\n  toolbar: {\r\n    paddingRight: 24, // keep right padding when drawer closed\r\n  },\r\n  toolbarIcon: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"flex-end\",\r\n    padding: \"0 8px\",\r\n    ...theme.mixins.toolbar,\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create([\"width\", \"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    marginLeft: drawerWidth,\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create([\"width\", \"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: 36,\r\n  },\r\n  menuButtonHidden: {\r\n    display: \"none\",\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  drawerPaper: {\r\n    position: \"relative\",\r\n    whiteSpace: \"nowrap\",\r\n    width: drawerWidth,\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  drawerPaperClose: {\r\n    overflowX: \"hidden\",\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    width: theme.spacing(7),\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: theme.spacing(9),\r\n    },\r\n  },\r\n  appBarSpacer: theme.mixins.toolbar,\r\n  content: {\r\n    flexGrow: 1,\r\n    height: \"100vh\",\r\n    overflow: \"auto\",\r\n  },\r\n  container: {\r\n    paddingTop: theme.spacing(4),\r\n    paddingBottom: theme.spacing(4),\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    display: \"flex\",\r\n    overflow: \"auto\",\r\n    flexDirection: \"column\",\r\n  },\r\n  fixedHeight: {\r\n    height: 240,\r\n  },\r\n  tab: {\r\n    flexGrow: 1,\r\n  },\r\n}));\r\n\r\nexport default function Dashboard() {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleDrawerOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  const handleDrawerClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\r\n\r\n  const [value, setValue] = React.useState(0);\r\n\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <CssBaseline />\r\n      <AppBar\r\n        position=\"absolute\"\r\n        className={clsx(classes.appBar, open && classes.appBarShift)}\r\n      >\r\n        <Toolbar className={classes.toolbar}>\r\n          <IconButton\r\n            edge=\"start\"\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n            onClick={handleDrawerOpen}\r\n            className={clsx(\r\n              classes.menuButton,\r\n              open && classes.menuButtonHidden\r\n            )}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography\r\n            component=\"h1\"\r\n            variant=\"h6\"\r\n            color=\"inherit\"\r\n            noWrap\r\n            className={classes.title}\r\n          >\r\n            Dashboard\r\n          </Typography>\r\n          <IconButton color=\"inherit\">\r\n            <Badge badgeContent={4} color=\"secondary\">\r\n              <NotificationsIcon />\r\n            </Badge>\r\n          </IconButton>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Drawer\r\n        variant=\"permanent\"\r\n        classes={{\r\n          paper: clsx(classes.drawerPaper, !open && classes.drawerPaperClose),\r\n        }}\r\n        open={open}\r\n      >\r\n        <div className={classes.toolbarIcon}>\r\n          <IconButton onClick={handleDrawerClose}>\r\n            <ChevronLeftIcon />\r\n          </IconButton>\r\n        </div>\r\n        <Divider />\r\n      </Drawer>\r\n      <main className={classes.content}>\r\n        <div className={classes.appBarSpacer} />\r\n        <Container maxWidth=\"lg\" className={classes.container}>\r\n          <Paper className={classes.tab}>\r\n            <Tabs\r\n              value={value}\r\n              onChange={handleChange}\r\n              indicatorColor=\"primary\"\r\n              textColor=\"primary\"\r\n              centered\r\n            >\r\n              <Tab label=\"Most Recent Question\" />\r\n              <Tab label=\"Test Score\" />\r\n            </Tabs>\r\n            <TabPanel value={value} index={0}>\r\n              <Scores />\r\n            </TabPanel>\r\n            <TabPanel value={value} index={1}>\r\n              Item Two\r\n            </TabPanel>\r\n          </Paper>\r\n          <Box pt={4}>\r\n            <Copyright />\r\n          </Box>\r\n        </Container>\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n","import logo from './logo.svg';\nimport './App.css';\nimport Dashboard from './src/Dashboard';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Dashboard/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}